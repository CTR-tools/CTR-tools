please refer to ctr_lev.ksy for a full format documentation.


How the game reads lev into memory:

dword - lev file size
{ byte[] lev data}
dword - size of array in bytes (size / 4)
uint[] - array of pointers. this array is used to translate absolute offsets in lev file to PS1 memory offsets.



Quadblock format

9 shorts	indices in vertex array - form 4 quads

Short	quadflags (check github)

4 Bytes	big endian value
	8 bits	drawing order for low poly quad 
	4 * 5 bits - quad flags
		3 bits - texture rotation mode - 8 values for 0 90 180 270 and mirrored
			On real hardware it probably defines the order vram is read.
		1 bit - render only 1 triangle
		1 bit - second face is degenerate

4 * 1 byte	drawing order for hi poly quads.

4 * 1 uint	pointers to mid level texture data

3 * 2 short	bounding box min(x,y,z), max(x,y,z)

Byte	terrain type - spotted 0-20, more flag values in hub areas.
Byte	weather intensity - 0 15 30 45 60
Byte	weather particles type - spotted 1 - snow, 3 - ???, 9 - rain
Byte	unknown - mostly 0, 129 in sewer. 192 in temple1

Short	unique value for each ngon. Probably an index?
Interestingly it starts with 001F then goes down to 0000, then 003F down to 0020, and so on.
 
Byte	track progression marker, used to find current player position as well as his direction 
	(wrong way message). Gradually increases from start to finish, everything outside the track is FF.

Byte	unknown. In blizzard bluff: values 13 to 18

Uint	pointer to low level texture data, the one used in the distance. Can be null.

Uint	pointer to 4 pointers group, which assumed to be pointers to high level texture data.
10 shorts	or 20 bytes? unknown. Somehow related to collision.



TextureLayout struct:

Sample: A8 F0 A2 5E B3 F0 6A 00 A8 FB B3 FB

2 Bytes - uv0 xy
Short - palette xy: 10 bits Y, 6 bits X
2 Bytes - uv1 xy
Short - texture page: 12 bits Y, 4 bits X (more likely only 1 byte and the other is 0?)
2 Bytes - uv2 xy
2 Bytes - uv3 xy



Event types (used in pickup headers and animated models)
------------
-1: nothing
2: single_fruit
6: crate_nitro
7: crate_fruit
8: crate_weapon
18: state_burned
19: state_eaten
33: state_squished
34: state_squished_ball
36: state_rotated_armadillo
37: state_killed_blades
39: crate_tnt
76: pass_seal
78: state_squished_barrel
81: state_turle_jump
82: state_rotated_spider
84: state_burned_in_air
85: labs_drum
87: pipe
89: vent
91: state_castle_sign
92: crate_relic1
96: crystal
100: crate_relic2
101: crate_relic3
108: warp_pad
112: teeth
114: save_screen
115: garage_pin
116: garage_papu
117: garage_roo
118: garage_joe
119: garage_oxide
122: door_unknown
139: penguin_lose
147: letter_c
148: letter_t
149: letter_r
150: crashsleep
151: intro_coco
152: intro_cortex
153: intro_tiny
154: intro_polar
155: intro_dingo
157: xx_intro_beam_glow
158: intro_tiny_kart
159: intro_dingo_kart
160: xx_intro_1
161: xx_intro_2
165: introoxidebody
166: finish_lap
204: intro_flash
206: crash_select
207: cortex_select
208: tiny_select
209: coco_select
210: ngin_select
211: dingo_select
212: polar_select
213: pura_select
223: oxide_speaker
224: intro_sparks
225: hub_door